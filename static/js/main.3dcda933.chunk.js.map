{"version":3,"sources":["reducers.ts","components/Navbar.tsx","components/SingleCard.tsx","components/Home.tsx","components/Product.tsx","components/Cart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Types","NavBar","history","useHistory","useEffect","push","className","to","productReducer","state","action","type","Create","id","payload","title","price","picture","count","Delete","filter","product","Increase","map","Decrease","SingleCard","props","React","useContext","userContext","dispatch","addToCart","record","i","products","length","_id","Card","Img","variant","src","Body","style","textAlign","Title","fontSize","pathname","foo","Text","description","stock","Footer","float","position","left","color","marginLeft","onClick","key","withRouter","useState","items","setItems","subtotal","setSubtotal","dropDwonValue","setDropDwonValue","axios","get","then","res","data","calculateSubTotal","sTotal","removeToCart","recordid","DropdownButton","alignRight","onSelect","e","console","log","sorted","sort","a","b","sortAscending","sortDescending","right","Dropdown","Item","eventKey","borderBottom","fontFamily","fontWeight","decreaseCart","recordID","marginRight","setCount","location","height","width","padding","borderWidth","borderStyle","Table","striped","bordered","hover","size","colSpan","Button","paddingLeft","paddingRight","initialState","mainReducer","createContext","Routing","exact","path","App","useReducer","Provider","value","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dcda933.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\ntype ActionMap<M extends { [index: string]: any }> = {\n    [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n    }\n    : {\n        type: Key;\n        payload: M[Key];\n    }\n};\n\n\nexport enum Types {\n    Create = 'CREATE_PRODUCT',\n    Delete = 'DELETE_PRODUCT',\n    Increase = 'INCREASE_PRODUCT',\n    Decrease = 'DECREASE_PRODUCT'\n}\n\ntype ProductType = {\n    id: number\n    title: string\n    price: number\n    count: number\n    picture: string\n}\n\ntype ProductPayload = {\n    [Types.Create]: {\n        id: number;\n        title: string;\n        price: number;\n        picture: string;\n        count: number;\n    };\n    [Types.Delete]: {\n        id: number;\n    };\n    [Types.Increase]: {\n        id: number;\n    }\n}\n\n\nexport type ProductActions = ActionMap<ProductPayload>[keyof ActionMap<ProductPayload>];\n\n\n\nexport const productReducer = (state, action) => {\n    switch (action.type) {\n        case Types.Create:\n            return [\n                ...state,\n                {\n                    id: action.payload.id,\n                    title: action.payload.title,\n                    price: action.payload.price,\n                    picture: action.payload.picture,\n                    count: action.payload.count\n                }\n            ]\n        case Types.Delete:\n            return [\n                ...state.filter(product => product.id !== action.payload.id)\n            ]\n        case Types.Increase:\n            return [\n                ...state.map(product =>\n                    product.id === action.payload.id\n                        ? { ...product, count: product.count + 1 }\n                        :\n                        product\n                )\n            ]\n        case Types.Decrease:\n            return [\n                ...state.map(product =>\n                    product.id === action.payload.id\n                        ? { ...product, count: product.count - 1 }\n                        :\n                        product\n                )\n            ]\n        default:\n            return state;\n    }\n};\n\n\n// export const productReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'CREATE_PRODUCT':\n//             return [\n//                 ...state,\n//                 {\n//                     id: action.payload.id,\n//                     title: action.payload.title,\n//                     price: action.payload.price,\n//                     picture: action.payload.picture,\n//                     count: 1\n//                 }\n//             ]\n//         case 'DELETE_PRODUCT':\n//             return [\n//                 ...state.filter(product => product.id !== action.payload.id),\n//             ]\n//         // case 'INCREASE_PRODUCT':\n//         //     return [\n//         //         ...state,\n//         //         {\n//         //             count: action.count + 1\n//         //         }\n//         //     ]\n//         // case 'DECREASE_PRODUCT':\n//         //     if (state.quantity > 0) {\n//         //         return {\n//         //             ...state,\n//         //             count: action.count - 1\n//         //         };\n//         //     }\n//         default:\n//             return state;\n//     }\n// }\n\n\n","import React, { useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst NavBar = () => {\n    const history = useHistory()\n\n    useEffect(()=>{\n        {history.push(\"/\")} \n    }, [])\n\n    return (\n        <div className=\"norm\">\n            <div className=\"nav-wrapper white\">\n                <Link to=\"/\" className=\"cus \">Shopping Cart</Link>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Link, withRouter } from 'react-router-dom'\nimport { userContext } from '../App'\n\nimport { Types } from '../reducers';\nconst SingleCard = (props) => {\n\n    const { state, dispatch } = React.useContext(userContext);\n\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src={props.record.picture} />\n            <Card.Body style={{ textAlign: \"center\" }}>\n                <Card.Title style={{ fontSize: \"medium\" }} className=\"btn\"\n                ><Link to={{\n                    pathname: '/product/' + props.record._id,\n                    state: { foo: props.record }\n                }}>{props.record.title} </Link></Card.Title>\n                <Card.Text>\n                    {props.record.description}\n                </Card.Text>\n                <Card.Text style={{ fontSize: \"medium\" }}>\n                    ${props.record.price}\n                </Card.Text>\n                <Card.Text style={{ fontSize: \"medium\" }}>\n                    Available: {props.record.stock}\n                </Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"align-items-center\" >\n                <i className=\"material-icons\"\n                    style={{ float: \"left\", position: \"absolute\", left: \"0px\", color: \"red\", marginLeft: \"5px\" }}\n                    onClick={() => { addToCart(props.record) }}\n                >add_shopping_cart</i> <small className=\"btn\"\n                    onClick={() => { addToCart(props.record) }}\n                    style={{ marginLeft: \"10px\", fontSize: \"large\" }}>  Add to cart</small>\n\n                {\n                    state.products.map(product => (\n                        product.id === props.record._id\n                            ? <span key={product.id}>\n                                <i className=\"material-icons\"\n                                    style={{ position: \"relative\", left: \"0px\", color: \"grey\", marginLeft: \"0px\" }}\n\n                                >check</i>\n\n                                <span className=\"btn btn-secondary\" key={product.id} style={{ marginLeft: \"20px\" }}><Link style={{ color: \"white\" }} to={{\n                                    pathname: '/cart'\n                                }}> View cart</Link></span>\n\n                            </span>\n                            :\n                            <span key={product.id}></span>\n                    ))\n                }\n            </Card.Footer>\n            \n        </Card>\n\n\n\n\n    )\n}\n\nexport default SingleCard","import React, { useEffect, useState, useContext } from 'react'\n//import { Card } from 'react-bootstrap'\nimport axios from 'axios';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { userContext } from '../App'\nimport { Types } from '../reducers';\nimport './Home.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport SingleCard from './SingleCard'\nimport { Stats } from 'fs';\nconst Home = () => {\n\n    const [items, setItems] = useState<any[]>([])\n    const [subtotal, setSubtotal] = useState(0)\n    const [dropDwonValue, setDropDwonValue] = useState(\"Default Sorting\")\n    const { state, dispatch } = React.useContext(userContext);\n\n    useEffect(() => {\n        axios.get('https://gist.githubusercontent.com/Yeaseen/9eee54d0c4c673e414af25de915b18e5/raw/b2b746f230cb6d9ce31b36f68a96a361e238de42/file.json')\n            .then(res => {\n                //console.log(res.data)\n                setItems(res.data)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n\n    const sortDescending = () => {\n        const sorted = items.sort((a, b) => a[\"price\"] - b[\"price\"])\n        //console.log(sorted)\n        setItems(sorted)\n    }\n\n    const sortAscending = () => {\n        const sorted = items.sort((a, b) => b[\"price\"] - a[\"price\"])\n        //console.log(sorted)\n        setItems(sorted)\n    }\n\n\n    const handleSelect = (e) => {\n        console.log(e);\n        //setValue(e)\n        setDropDwonValue(e)\n\n        if (e === \"Ascending\") {\n            sortAscending()\n        }\n        else if (e === \"Descending\") {\n            sortDescending()\n        }\n\n    }\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n\n        //console.log(state)\n    }\n\n\n    const increaseCart = (recordID) => {\n\n        dispatch({\n            type: Types.Increase,\n            payload: {\n                id: recordID\n            }\n        });\n    }\n\n\n    const decreaseCart = (record) => {\n\n        if (record.count == 1) {\n            removeToCart(record.id)\n            return;\n        }\n\n        dispatch({\n            type: Types.Decrease,\n            payload: {\n                id: record.id\n            }\n        });\n    }\n\n\n\n    return (\n        <>\n            {items ?\n                <div>\n\n                    <div className=\"container\">\n                        <div className=\"row site-section\">\n                            <div className=\"col-md-9\">\n\n                                <h1>Products</h1>\n\n                                <DropdownButton\n                                    alignRight\n                                    title={dropDwonValue}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleSelect}\n                                    style={{ float: \"right\", position: \"absolute\", right: \"50px\" }}\n                                >\n                                    <Dropdown.Item eventKey=\"Ascending\">Ascending</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"Descending\">Descending</Dropdown.Item>\n                                </DropdownButton>\n\n                                <div className=\"container-fluid d-flex justify-content-center\">\n                                    <div className=\"row\">\n                                        {\n                                            items.map(record => {\n                                                return (\n                                                    <div className=\"col-md-5\" key={record._id}>\n                                                        <SingleCard record={record} />\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-3\">\n                                <h1>Cart</h1>\n                                {\n                                    state.products.length > 0 ?\n                                        <div>\n                                            {state.products.map(record => (\n                                                <div className=\"Comment-user\" key={record.id} style={{ borderBottom: \"1px solid blue\" }}>\n                                                    <div>\n                                                        <div className=\"Comment-user-avatar\">\n                                                            <img src={record.picture} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"Comment-user-nickname\" >\n\n                                                        <span style={{ fontFamily: \"'PT Sans', sans-serif\", fontWeight: \"bold\" }}>{record.title}</span>\n\n                                                        <br></br>\n                                                        <form>\n                                                            <div className=\"row\">\n                                                                <div className=\"value-button\" id=\"decrease\"\n                                                                    onClick={() => { decreaseCart(record) }}\n                                                                >-</div>\n                                                                <div className=\"count-value\">\n                                                                    {record.count}\n                                                                </div>\n                                                                <div className=\"value-button\" id=\"increase\"\n                                                                    onClick={() => { increaseCart(record.id) }}\n                                                                >+</div>\n                                                                <div\n                                                                > x ${record.price} </div>\n\n                                                              \n                                                                <i className=\"material-icons\"\n                                                                    style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                                    onClick={() => { removeToCart(record.id) }}\n                                                                >delete</i>\n                                                            </div>\n\n                                                        </form>\n\n                                                        {/* {record.count} x ${record.price} */}\n                                                        {/* <i className=\"material-icons\"\n                                                            style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                            onClick={() => { removeToCart(record.id) }}\n                                                        >delete</i>\n\n                                                        <br></br> */}\n\n                                                    </div>\n\n                                                </div>\n                                            ))}\n                                            <br></br>\n\n                                            <span style={{ fontWeight: \"bolder\", fontSize: \"small\" }}>Subtotal: ${subtotal}</span>\n\n                                            <br></br>\n\n                                            <div className=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}><Link style={{ color: \"white\" }} to={{\n                                                pathname: '/cart'\n                                            }}> View cart</Link></div>\n\n                                            <div className=\"btn btn-secondary\">Checkout</div>\n                                        </div>\n                                        : <h4>No products in the cart</h4>\n                                }\n                            </div>\n\n                        </div>\n\n\n                    </div>\n                </div >\n\n                :\n                <h2>Loading......</h2>\n            }\n        </>\n\n    )\n}\n\nexport default withRouter(Home)","import React, { useContext, useState, useEffect } from 'react'\n\nimport { userContext } from '../App'\nimport { Link, withRouter } from 'react-router-dom';\nimport { Types } from '../reducers';\nimport './Home.css'\nconst Product = (props) => {\n    const { state, dispatch } = useContext(userContext);\n    const [subtotal, setSubtotal] = useState(0)\n\n    const [count, setCount] = useState(0)\n\n    //console.log(state)\n    const { foo } = props.location.state\n    //console.log(foo)\n\n\n\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n            if (state.products[i].id === foo._id) {\n                setCount(state.products[i].count)\n            }\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n        setCount(0)\n        //console.log(state)\n    }\n\n    const increaseCart = (recordID) => {\n\n        dispatch({\n            type: Types.Increase,\n            payload: {\n                id: recordID\n            }\n        });\n    }\n\n\n    const decreaseCart = (record) => {\n\n        if (record.count == 1) {\n            removeToCart(record.id)\n            return;\n        }\n\n        dispatch({\n            type: Types.Decrease,\n            payload: {\n                id: record.id\n            }\n        });\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row site-section\">\n                <div className=\"col-md-9\">\n\n                    <div className=\"row site-section\" style={{ borderBottom: \"1px solid blue\" }}>\n                        <div className=\"col-md-8\">\n                            <img style={{ height: \"400px\", width: \"400px\" }} src={foo.picture}></img>\n\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <h1>{foo.title}</h1>\n                            <h4>${foo.price}</h4>\n                            <p>{foo.description}</p>\n                            <span style={{ padding: \"7px\", borderWidth: \"1px\", borderStyle: \"solid\", fontSize: \"small\" }}>\n                                {count}\n                            </span>\n\n                            <span className=\"btn btn-secondary\" onClick={() => { addToCart(foo) }} style={{ marginLeft: \"10px\", fontSize: \"large\" }}>  Add to cart</span>\n                        </div>\n\n                    </div>\n\n\n                    <br></br>\n\n\n                    <div className=\"row\">\n                        <h1>Description</h1>\n                        <p>{foo.description}</p>\n                    </div>\n\n                </div>\n\n                <div className=\"col-md-3\">\n                    <h1>Cart</h1>\n                    {\n                        state.products.length > 0 ?\n                            <div>\n                                {state.products.map(record => (\n                                    <div className=\"Comment-user\" key={record.id} style={{ borderBottom: \"1px solid blue\" }}>\n                                        <div>\n                                            <div className=\"Comment-user-avatar\">\n                                                <img src={record.picture} />\n                                            </div>\n                                        </div>\n                                        <div className=\"Comment-user-nickname\" >\n\n                                            <span style={{ fontFamily: \"'PT Sans', sans-serif\", fontWeight: \"bold\" }}>{record.title}</span>\n\n                                            <br></br>\n\n                                            <form>\n                                                <div className=\"row\">\n                                                    <div className=\"value-button\" id=\"decrease\"\n                                                        onClick={() => { decreaseCart(record) }}\n                                                    >-</div>\n                                                    <div className=\"count-value\">\n                                                        {record.count}\n                                                    </div>\n                                                    <div className=\"value-button\" id=\"increase\"\n                                                        onClick={() => { increaseCart(record.id) }}\n                                                    >+</div>\n\n\n                                                    <i className=\"material-icons\"\n                                                        style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                        onClick={() => { removeToCart(record.id) }}\n                                                    >delete</i>\n                                                </div>\n\n                                            </form>\n\n\n                                            {/* {record.count} x ${record.price}\n                                            <i className=\"material-icons\"\n                                                style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                onClick={() => { removeToCart(record.id) }}\n                                            >delete</i> */}\n                                        </div>\n                                    </div>\n                                ))}\n                                <br></br>\n\n                                <span style={{ fontWeight: \"bolder\", fontSize: \"small\" }}>Subtotal: ${subtotal}</span>\n\n                                <br></br>\n\n                                <div className=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}><Link style={{ color: \"white\" }} to={{\n                                    pathname: '/cart'\n                                }}> View cart</Link></div>\n\n                                <div className=\"btn btn-secondary\">Checkout</div>\n                            </div>\n                            : <h4>No products in the cart</h4>\n                    }\n                </div>\n\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Product)","import React, { useContext, useState, useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap';\nimport { userContext } from '../App'\nimport { withRouter } from 'react-router-dom';\nimport { Types } from '../reducers';\n\nimport './Cart.css'\nconst Cart = (props) => {\n    const { state, dispatch } = useContext(userContext);\n    const [subtotal, setSubtotal] = useState(0)\n    //console.log(state)\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n\n        //console.log(state)\n    }\n\n    const increaseCart = (recordID) => {\n\n        dispatch({\n            type: Types.Increase,\n            payload: {\n                id: recordID\n            }\n        });\n    }\n\n\n    const decreaseCart = (record) => {\n\n        if (record.count == 1) {\n            removeToCart(record.id)\n            return;\n        }\n\n        dispatch({\n            type: Types.Decrease,\n            payload: {\n                id: record.id\n            }\n        });\n    }\n\n\n\n\n    return (\n        <div className=\"container\">\n            <h1>Cart View</h1>\n\n            <Table striped bordered hover size=\"lg\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th></th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Product</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Price</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Quantity</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Subtotal</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        state.products.map(product => (\n                            <tr key={product.id}>\n                                <td > <i className=\"material-icons\"\n                                    style={{ color: \"red\" }}\n                                    onClick={() => { removeToCart(product.id) }}\n                                >delete</i></td>\n                                <td style={{ textAlign: \"center\" }}><div className=\"Comment-user-avatar\">\n                                    <img src={product.picture} />\n                                </div></td>\n                                <td className=\"text-primary\" style={{ textAlign: \"center\", fontSize: \"x-large\" }}>{product.title}</td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}>${product.price}</td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}> <div className=\"inc-dec\">\n                                    <div className=\"row\">\n                                        <div className=\"vallue-button-dec\"\n                                            onClick={() => { decreaseCart(product) }}\n                                        >-</div>\n                                        <div className=\"coount-value\">\n                                            {product.count}\n                                        </div>\n                                        <div className=\"vallue-button-inc\"\n                                            onClick={() => { increaseCart(product.id) }}\n                                        >+</div>\n                                    </div>\n\n                                </div>\n\n                                </td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}>${product.price * product.count}</td>\n                            </tr>\n                        ))\n                    }\n                    <tr key=\"0\">\n                        <td colSpan={6} style={{ textAlign: \"right\", fontSize: \"x-large\" }}> <Button variant=\"secondary\" size=\"lg\">Update Cart</Button> </td>\n                    </tr>\n                </tbody>\n            </Table>\n\n            <br></br>\n            <br></br>\n\n            <div className=\"row\">\n                <div style={{ height: \"300px\" }} className=\"col-md-10 offset-md-6\">\n                    <div className=\"row border align-items-center\" key=\"1\" style={{ height: \"100px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"15px\", fontWeight: \"bolder\", color: \"gray\" }}>Subtotal</span>\n                        <span style={{ fontWeight: \"lighter\" }}>${subtotal}</span>\n\n                    </div>\n                    <div className=\"row border align-items-center\" key=\"2\" style={{ height: \"150px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"15px\", fontWeight: \"bolder\", color: \"gray\" }}>Shipping</span>\n                        <span style={{ fontWeight: \"lighter\" }}>Free Shipping <br></br>Shipping options will be updated during checkout </span>\n\n                    </div>\n                    <div className=\"row border align-items-center\" key=\"3\" style={{ height: \"100px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"60px\", fontWeight: \"bolder\", color: \"gray\" }}>Total</span>\n                        <span style={{ fontWeight: \"lighter\" }}>${subtotal}</span>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default withRouter(Cart)","import React, { useEffect, createContext, useReducer, useContext } from 'react'\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Product from './components/Product'\nimport Cart from './components/Cart'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { productReducer } from './reducers'\n\ntype ProductType = {\n  id: number\n  title: string\n  price: number\n  count: number\n  picture: string\n}\n\ntype InitialStateType = {\n  products: ProductType[];\n}\n\nconst initialState = {\n  products: []\n}\nconst mainReducer = ({ products }, action) => ({\n  products: productReducer(products, action),\n});\n\n\nexport const userContext = createContext<{\n  state: InitialStateType;\n  dispatch: React.Dispatch<any>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\n\n\nconst Routing = (props) => {\n  const { state, dispatch } = useContext(userContext)\n\n  useEffect(() => {\n\n  }, [])\n\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" >\n        <Home />\n      </Route>\n\n      <Route exact path=\"/product/:productid\" >\n        <Product />\n      </Route>\n\n      <Route exact path=\"/cart\" >\n        <Cart />\n      </Route>\n\n    </Switch>\n  )\n}\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n  return (\n\n    <userContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["reducers.ts","components/Navbar.tsx","components/SingleCard.tsx","components/Home.tsx","components/Product.tsx","components/Cart.tsx","components/Checkout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Types","NavBar","history","useHistory","useEffect","push","className","to","productReducer","state","action","type","Create","id","payload","title","price","picture","count","Delete","filter","product","Increase","map","Decrease","DeleteALL","SingleCard","props","React","useContext","userContext","dispatch","addToCart","record","i","products","length","_id","Card","Img","variant","src","Body","style","textAlign","Title","fontSize","pathname","foo","Text","description","stock","Footer","float","position","left","color","marginLeft","onClick","key","withRouter","useState","items","setItems","subtotal","setSubtotal","dropDwonValue","setDropDwonValue","axios","get","then","res","data","calculateSubTotal","sTotal","removeToCart","recordid","DropdownButton","alignRight","onSelect","e","console","log","sorted","sort","a","b","sortAscending","sortDescending","right","Dropdown","Item","eventKey","borderBottom","fontFamily","fontWeight","decreaseCart","recordID","marginRight","setCount","location","height","width","padding","borderWidth","borderStyle","Table","striped","bordered","hover","size","colSpan","Button","paddingLeft","paddingRight","initialState","mainReducer","createContext","Routing","exact","path","App","useReducer","Provider","value","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"8PAYYA,E,+DCQGC,EAjBA,WACX,IAAMC,EAAUC,cAMhB,OAJAC,qBAAU,WACLF,EAAQG,KAAK,OACf,IAGC,yBAAKC,UAAU,QACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,QAAvB,oB,mEDDJN,K,wBAAAA,E,wBAAAA,E,4BAAAA,E,4BAAAA,E,+BAAAA,M,KAmCL,IAAMQ,EAAiB,SAACC,EAAOC,GACpC,OAAQA,EAAOC,MACb,KAAKX,EAAMY,OACT,MAAM,GAAN,mBACKH,GADL,CAEE,CACEI,GAAIH,EAAOI,QAAQD,GACnBE,MAAOL,EAAOI,QAAQC,MACtBC,MAAON,EAAOI,QAAQE,MACtBC,QAASP,EAAOI,QAAQG,QACxBC,MAAOR,EAAOI,QAAQI,SAG5B,KAAKlB,EAAMmB,OACT,OAAO,YAAIV,EAAMW,QAAO,SAACC,GAAD,OAAaA,EAAQR,KAAOH,EAAOI,QAAQD,OACrE,KAAKb,EAAMsB,SACT,OAAO,YACFb,EAAMc,KAAI,SAACF,GAAD,OACXA,EAAQR,KAAOH,EAAOI,QAAQD,GAA9B,2BACSQ,GADT,IACkBH,MAAOG,EAAQH,MAAQ,IACrCG,MAGV,KAAKrB,EAAMwB,SACT,OAAO,YACFf,EAAMc,KAAI,SAACF,GAAD,OACXA,EAAQR,KAAOH,EAAOI,QAAQD,GAA9B,2BACSQ,GADT,IACkBH,MAAOG,EAAQH,MAAQ,IACrCG,MAGV,KAAKrB,EAAMyB,UACT,MAAO,GACT,QACE,OAAOhB,I,gBEmBEiB,EA7FI,SAACC,GAAW,IAAD,EAEEC,IAAMC,WAAWC,GAArCrB,EAFkB,EAElBA,MAAOsB,EAFW,EAEXA,SAGTC,EAAY,SAACC,GAGf,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAM0B,SAASC,OAAQF,IACvC,GAAIzB,EAAM0B,SAASD,GAAGrB,KAAOoB,EAAOI,IAUhC,YATAN,EAAS,CACLpB,KAAMX,EAAMsB,SACZR,QAAS,CACLD,GAAIoB,EAAOI,OAU3BN,EAAS,CACLpB,KAAMX,EAAMY,OACZE,QAAS,CACLD,GAAIoB,EAAOI,IACXtB,MAAOkB,EAAOlB,MACdC,MAAOiB,EAAOjB,MACdC,QAASgB,EAAOhB,QAChBC,MAAO,MAQnB,OACI,kBAACoB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKd,EAAMM,OAAOhB,UAC1C,kBAACqB,EAAA,EAAKI,KAAN,CAAWC,MAAO,CAAEC,UAAW,WAC3B,kBAACN,EAAA,EAAKO,MAAN,CAAYF,MAAO,CAAEG,SAAU,UAAYxC,UAAU,OACpD,kBAAC,IAAD,CAAMC,GAAI,CACPwC,SAAU,YAAcpB,EAAMM,OAAOI,IACrC5B,MAAO,CAAEuC,IAAKrB,EAAMM,UACpBN,EAAMM,OAAOlB,MAHhB,MAID,kBAACuB,EAAA,EAAKW,KAAN,KACKtB,EAAMM,OAAOiB,aAElB,kBAACZ,EAAA,EAAKW,KAAN,CAAWN,MAAO,CAAEG,SAAU,WAA9B,IACMnB,EAAMM,OAAOjB,OAEnB,kBAACsB,EAAA,EAAKW,KAAN,CAAWN,MAAO,CAAEG,SAAU,WAA9B,cACgBnB,EAAMM,OAAOkB,QAGjC,kBAACb,EAAA,EAAKc,OAAN,CAAa9C,UAAU,sBACnB,uBAAGA,UAAU,iBACTqC,MAAO,CAAEU,MAAO,OAAQC,SAAU,WAAYC,KAAM,MAAOC,MAAO,MAAOC,WAAY,OACrFC,QAAS,WAAQ1B,EAAUL,EAAMM,UAFrC,qBADJ,IAI2B,2BAAO3B,UAAU,MACpCoD,QAAS,WAAQ1B,EAAUL,EAAMM,SACjCU,MAAO,CAAEc,WAAY,OAAQX,SAAU,UAFpB,iBAKnBrC,EAAM0B,SAASZ,KAAI,SAAAF,GAAO,OACtBA,EAAQR,KAAOc,EAAMM,OAAOI,IACtB,0BAAMsB,IAAKtC,EAAQR,IACjB,uBAAGP,UAAU,iBACTqC,MAAO,CAAEW,SAAU,WAAYC,KAAM,MAAOC,MAAO,OAAQC,WAAY,QAD3E,SAKA,0BAAMnD,UAAU,oBAAoBqD,IAAKtC,EAAQR,GAAI8B,MAAO,CAAEc,WAAY,SAAU,kBAAC,IAAD,CAAMd,MAAO,CAAEa,MAAO,SAAWjD,GAAI,CACrHwC,SAAU,UADsE,gBAMxF,0BAAMY,IAAKtC,EAAQR,WCsLhC+C,eAlQF,WAAO,IAAD,EACSC,mBAAgB,IADzB,mBACVC,EADU,KACHC,EADG,OAEeF,mBAAS,GAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAGyBJ,mBAAS,mBAHlC,mBAGVK,EAHU,KAGKC,EAHL,OAIWvC,IAAMC,WAAWC,GAArCrB,EAJS,EAITA,MAAOsB,EAJE,EAIFA,SAEf3B,qBAAU,WACRgE,IACGC,IACC,sIAEDC,MAAK,SAACC,GAELR,EAASQ,EAAIC,WAEhB,IAEHpE,qBAAU,WACRqE,MACC,CAAChE,IAEJ,IAwBMgE,EAAoB,WAExB,IADA,IAAIC,EAAS,EACJxC,EAAI,EAAGA,EAAIzB,EAAM0B,SAASC,OAAQF,IACzCwC,GAAkBjE,EAAM0B,SAASD,GAAGlB,MAAQP,EAAM0B,SAASD,GAAGhB,MAGhE+C,EAAYS,IAGRC,EAAe,SAACC,GAEpB7C,EAAS,CACPpB,KAAMX,EAAMmB,OACZL,QAAS,CACPD,GAAI+D,MA8BV,OACE,oCACGd,EACC,6BACE,yBAAKxD,UAAU,aACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,YACb,wCAEA,kBAACuE,EAAA,EAAD,CACEC,YAAU,EACV/D,MAAOmD,EACPrD,GAAG,4BACHkE,SArEK,SAACC,GACpBC,QAAQC,IAAIF,GAEZb,EAAiBa,GAEP,cAANA,EAXgB,WACpB,IAAMG,EAASrB,EAAMsB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAC,MAAYD,EAAC,SAElDtB,EAASoB,GASPI,GACe,eAANP,GAnBU,WACrB,IAAMG,EAASrB,EAAMsB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAC,MAAYC,EAAC,SAElDvB,EAASoB,GAiBPK,IA8DY7C,MAAO,CACLU,MAAO,QACPC,SAAU,WACVmC,MAAO,SAGT,kBAACC,EAAA,EAASC,KAAV,CAAeC,SAAS,aAAxB,aACA,kBAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,cAAxB,eAKF,yBAAKtF,UAAU,iDACb,yBAAKA,UAAU,OACZwD,EAAMvC,KAAI,SAACU,GACV,OACE,yBAAK3B,UAAU,WAAWqD,IAAK1B,EAAOI,KACpC,kBAAC,EAAD,CAAYJ,OAAQA,WAQhC,yBAAK3B,UAAU,YACb,oCACCG,EAAM0B,SAASC,OAAS,EACvB,6BACG3B,EAAM0B,SAASZ,KAAI,SAACU,GAAD,OAClB,yBACE3B,UAAU,eACVqD,IAAK1B,EAAOpB,GACZ8B,MAAO,CAAEkD,aAAc,mBAEvB,6BACE,yBAAKvF,UAAU,uBACb,yBAAKmC,IAAKR,EAAOhB,YAGrB,yBAAKX,UAAU,yBACb,0BACEqC,MAAO,CACLmD,WAAY,wBACZC,WAAY,SAGb9D,EAAOlB,OAGV,6BACA,8BACE,yBAAKT,UAAU,OACb,yBACEA,UAAU,eACVO,GAAG,WACH6C,QAAS,YApFlB,SAACzB,GACA,GAAhBA,EAAOf,MAKXa,EAAS,CACPpB,KAAMX,EAAMwB,SACZV,QAAS,CACPD,GAAIoB,EAAOpB,MAPb8D,EAAa1C,EAAOpB,IAmFQmF,CAAa/D,KAJjB,KASA,yBAAK3B,UAAU,eAAe2B,EAAOf,OACrC,yBACEZ,UAAU,eACVO,GAAG,WACH6C,QAAS,WAvGlB,IAACuC,IAwGuBhE,EAAOpB,GAvGlDkB,EAAS,CACPpB,KAAMX,EAAMsB,SACZR,QAAS,CACPD,GAAIoF,OAgGkB,KASA,oCAAUhE,EAAOjB,MAAjB,KAEA,uBACEV,UAAU,iBACVqC,MAAO,CACLU,MAAO,QACPC,SAAU,WACVmC,MAAO,MACPjC,MAAO,OAETE,QAAS,WACPiB,EAAa1C,EAAOpB,MATxB,iBA2BV,6BAEA,0BAAM8B,MAAO,CAAEoD,WAAY,SAAUjD,SAAU,UAA/C,cACckB,GAGd,6BAEA,yBACE1D,UAAU,oBACVqC,MAAO,CAAEuD,YAAa,SAEtB,kBAAC,IAAD,CACEvD,MAAO,CAAEa,MAAO,SAChBjD,GAAI,CACFwC,SAAU,UAGX,IANH,cAWF,yBACEzC,UAAU,oBACVqC,MAAO,CAAEuD,YAAa,SAEtB,kBAAC,IAAD,CACEvD,MAAO,CAAEa,MAAO,SAChBjD,GAAI,CACFwC,SAAU,cAGX,IANH,cAcJ,2DAOV,iDChDOa,eAjNC,SAACjC,GAAW,IAAD,EACKE,qBAAWC,GAA/BrB,EADe,EACfA,MAAOsB,EADQ,EACRA,SADQ,EAES8B,mBAAS,GAFlB,mBAEhBG,EAFgB,KAENC,EAFM,OAIGJ,mBAAS,GAJZ,mBAIhB3C,EAJgB,KAITiF,EAJS,KAOfnD,EAAQrB,EAAMyE,SAAS3F,MAAvBuC,IAMR5C,qBAAU,WACNqE,MACD,CAAChE,IAGJ,IAAMgE,EAAoB,WAEtB,IADA,IAAIC,EAAS,EACJxC,EAAI,EAAGA,EAAIzB,EAAM0B,SAASC,OAAQF,IACvCwC,GAAkBjE,EAAM0B,SAASD,GAAGlB,MAAQP,EAAM0B,SAASD,GAAGhB,MAC1DT,EAAM0B,SAASD,GAAGrB,KAAOmC,EAAIX,KAC7B8D,EAAS1F,EAAM0B,SAASD,GAAGhB,OAInC+C,EAAYS,IAsCVC,EAAe,SAACC,GAElB7C,EAAS,CACLpB,KAAMX,EAAMmB,OACZL,QAAS,CACLD,GAAI+D,KAGZuB,EAAS,IA6Bb,OACI,yBAAK7F,UAAU,aACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAEX,yBAAKA,UAAU,mBAAmBqC,MAAO,CAAEkD,aAAc,mBACrD,yBAAKvF,UAAU,YACX,yBAAKqC,MAAO,CAAE0D,OAAQ,QAASC,MAAO,SAAW7D,IAAKO,EAAI/B,WAI9D,yBAAKX,UAAU,YACX,4BAAK0C,EAAIjC,OACT,gCAAMiC,EAAIhC,OACV,2BAAIgC,EAAIE,aACR,0BAAMP,MAAO,CAAE4D,QAAS,MAAOC,YAAa,MAAOC,YAAa,QAAS3D,SAAU,UAC9E5B,GAGL,0BAAMZ,UAAU,oBAAoBoD,QAAS,YA3FnD,SAACzB,GAGf,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAM0B,SAASC,OAAQF,IACvC,GAAIzB,EAAM0B,SAASD,GAAGrB,KAAOoB,EAAOI,IAUhC,YATAN,EAAS,CACLpB,KAAMX,EAAMsB,SACZR,QAAS,CACLD,GAAIoB,EAAOI,OAU3BN,EAAS,CACLpB,KAAMX,EAAMY,OACZE,QAAS,CACLD,GAAIoB,EAAOI,IACXtB,MAAOkB,EAAOlB,MACdC,MAAOiB,EAAOjB,MACdC,QAASgB,EAAOhB,QAChBC,MAAO,KAkE0Dc,CAAUgB,IAAQL,MAAO,CAAEc,WAAY,OAAQX,SAAU,UAA9G,mBAMR,6BAGA,yBAAKxC,UAAU,OACX,2CACA,2BAAI0C,EAAIE,eAKhB,yBAAK5C,UAAU,YACX,oCAEIG,EAAM0B,SAASC,OAAS,EACpB,6BACK3B,EAAM0B,SAASZ,KAAI,SAAAU,GAAM,OACtB,yBAAK3B,UAAU,eAAeqD,IAAK1B,EAAOpB,GAAI8B,MAAO,CAAEkD,aAAc,mBACjE,6BACI,yBAAKvF,UAAU,uBACX,yBAAKmC,IAAKR,EAAOhB,YAGzB,yBAAKX,UAAU,yBAEX,0BAAMqC,MAAO,CAAEmD,WAAY,wBAAyBC,WAAY,SAAW9D,EAAOlB,OAElF,6BAEA,8BACI,yBAAKT,UAAU,OACX,yBAAKA,UAAU,eAAeO,GAAG,WAC7B6C,QAAS,YAtExC,SAACzB,GAEE,GAAhBA,EAAOf,MAKXa,EAAS,CACLpB,KAAMX,EAAMwB,SACZV,QAAS,CACLD,GAAIoB,EAAOpB,MAPf8D,EAAa1C,EAAOpB,IAmEyCmF,CAAa/D,KADlC,KAGA,yBAAK3B,UAAU,eACV2B,EAAOf,OAEZ,yBAAKZ,UAAU,eAAeO,GAAG,WAC7B6C,QAAS,WAvFxC,IAACuC,IAuF4DhE,EAAOpB,GArFrFkB,EAAS,CACLpB,KAAMX,EAAMsB,SACZR,QAAS,CACLD,GAAIoF,OAiFgC,KAKA,uBAAG3F,UAAU,iBACTqC,MAAO,CAAEU,MAAO,QAASC,SAAU,WAAYmC,MAAO,MAAOjC,MAAO,OACpEE,QAAS,WAAQiB,EAAa1C,EAAOpB,MAFzC,iBAiBpB,6BAEA,0BAAM8B,MAAO,CAAEoD,WAAY,SAAUjD,SAAU,UAA/C,cAAsEkB,GAEtE,6BAEA,yBAAK1D,UAAU,oBAAoBqC,MAAO,CAAEuD,YAAa,SAAU,kBAAC,IAAD,CAAMvD,MAAO,CAAEa,MAAO,SAAWjD,GAAI,CACpGwC,SAAU,UADqD,eAInE,yBAAKzC,UAAU,qBAAf,aAEF,6D,gBCoCfsD,G,MAAAA,aAxOF,SAACjC,GAAW,IAAD,EACME,qBAAWC,GAA/BrB,EADc,EACdA,MAAOsB,EADO,EACPA,SADO,EAEU8B,mBAAS,GAFnB,mBAEfG,EAFe,KAELC,EAFK,KAKtB7D,qBAAU,WACRqE,MACC,CAAChE,IAEJ,IAAMgE,EAAoB,WAExB,IADA,IAAIC,EAAS,EACJxC,EAAI,EAAGA,EAAIzB,EAAM0B,SAASC,OAAQF,IACzCwC,GAAkBjE,EAAM0B,SAASD,GAAGlB,MAAQP,EAAM0B,SAASD,GAAGhB,MAGhE+C,EAAYS,IAGRC,EAAe,SAACC,GAEpB7C,EAAS,CACPpB,KAAMX,EAAMmB,OACZL,QAAS,CACPD,GAAI+D,MAoCV,OACE,yBAAKtE,UAAU,aACb,yCAEA,kBAACoG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACjC,+BACE,4BACE,6BACA,6BACA,wBAAInE,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,WAGA,wBAAIH,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,SACA,wBAAIH,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,YAGA,wBAAIH,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,cAKJ,+BACGrC,EAAM0B,SAASZ,KAAI,SAACF,GAAD,OAClB,wBAAIsC,IAAKtC,EAAQR,IACf,4BACG,IACD,uBACEP,UAAU,iBACVqC,MAAO,CAAEa,MAAO,OAChBE,QAAS,WACPiB,EAAatD,EAAQR,MAJzB,WAUF,wBAAI8B,MAAO,CAAEC,UAAW,WACtB,yBAAKtC,UAAU,uBACb,yBAAKmC,IAAKpB,EAAQJ,YAGtB,wBACEX,UAAU,eACVqC,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAEvCzB,EAAQN,OAEX,wBAAI4B,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,IACIzB,EAAQL,OAEZ,wBAAI2B,MAAO,CAAEC,UAAW,SAAUE,SAAU,YACzC,IACD,yBAAKxC,UAAU,WACb,yBAAKA,UAAU,OACb,yBACEA,UAAU,oBACVoD,QAAS,WA5ER,IAACzB,EACA,IADAA,EA6EaZ,GA5EtBH,MAKXa,EAAS,CACPpB,KAAMX,EAAMwB,SACZV,QAAS,CACPD,GAAIoB,EAAOpB,MAPb8D,EAAa1C,EAAOpB,MAwEN,KAQA,yBAAKP,UAAU,gBAAgBe,EAAQH,OACvC,yBACEZ,UAAU,oBACVoD,QAAS,WA9FR,IAACuC,IA+Fa5E,EAAQR,GA9FzCkB,EAAS,CACPpB,KAAMX,EAAMsB,SACZR,QAAS,CACPD,GAAIoF,OAwFQ,QAWN,wBAAItD,MAAO,CAAEC,UAAW,SAAUE,SAAU,YAA5C,IACIzB,EAAQL,MAAQK,EAAQH,WAIhC,wBAAIyC,IAAI,KACN,wBAAIoD,QAAS,EAAGpE,MAAO,CAAEC,UAAW,QAASE,SAAU,YACpD,IACD,kBAACkE,EAAA,EAAD,CACExE,QAAQ,YACRsE,KAAK,KACLpD,QAAS,WA1FrB3B,EAAS,CACPpB,KAAMX,EAAMyB,cAsFJ,cAQU,QAMlB,6BACA,6BAEA,yBAAKnB,UAAU,OACb,yBAAKqC,MAAO,CAAE0D,OAAQ,SAAW/F,UAAU,yBACzC,yBACEA,UAAU,gCACVqD,IAAI,IACJhB,MAAO,CACL0D,OAAQ,QACRvD,SAAU,UACVmE,YAAa,OACbC,aAAc,SAGhB,0BACEvE,MAAO,CACLuE,aAAc,OACdnB,WAAY,SACZvC,MAAO,SAJX,YASA,0BAAMb,MAAO,CAAEoD,WAAY,YAA3B,IAA0C/B,IAE5C,yBACE1D,UAAU,gCACVqD,IAAI,IACJhB,MAAO,CACL0D,OAAQ,QACRvD,SAAU,UACVmE,YAAa,OACbC,aAAc,SAGhB,0BACEvE,MAAO,CACLuE,aAAc,OACdnB,WAAY,SACZvC,MAAO,SAJX,YASA,0BAAMb,MAAO,CAAEoD,WAAY,YAA3B,iBACgB,6BADhB,mDAEW,MAGb,yBACEzF,UAAU,gCACVqD,IAAI,IACJhB,MAAO,CACL0D,OAAQ,QACRvD,SAAU,UACVmE,YAAa,OACbC,aAAc,SAGhB,0BACEvE,MAAO,CACLuE,aAAc,OACdnB,WAAY,SACZvC,MAAO,SAJX,SASA,0BAAMb,MAAO,CAAEoD,WAAY,YAA3B,IAA0C/B,WClOvCJ,eAHE,SAACjC,GAChB,OAAO,yBAAKrB,UAAU,aAAf,+BCoBH6G,G,MAAe,CACnBhF,SAAU,KAENiF,EAAc,SAAC,EAAc1G,GAAf,IAAGyB,EAAH,EAAGA,SAAH,MAA2B,CAC7CA,SAAU3B,EAAe2B,EAAUzB,KAGxBoB,EAAcuF,wBAGxB,CACD5G,MAAO0G,EACPpF,SAAU,kBAAM,QAGZuF,EAAU,SAAC3F,GAAW,IAAD,EACGE,qBAAWC,GADd,EACjBrB,MADiB,EACVsB,SAIf,OAFA3B,qBAAU,cAAU,IAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,uBAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,SAkBOC,MAZf,WAAgB,IAAD,EACaC,qBAAWN,EAAaD,GADrC,mBACN1G,EADM,KACCsB,EADD,KAEb,OACE,kBAACD,EAAY6F,SAAb,CAAsBC,MAAO,CAAEnH,QAAOsB,aACpC,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SC1DY8F,QACW,cAA7BC,OAAO1B,SAAS2B,UAEe,UAA7BD,OAAO1B,SAAS2B,UAEhBD,OAAO1B,SAAS2B,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3D,QAAQ2D,MAAMA,EAAMC,c","file":"static/js/main.a527b4d9.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react'\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key\n      }\n    : {\n        type: Key\n        payload: M[Key]\n      }\n}\n\nexport enum Types {\n  Create = 'CREATE_PRODUCT',\n  Delete = 'DELETE_PRODUCT',\n  Increase = 'INCREASE_PRODUCT',\n  Decrease = 'DECREASE_PRODUCT',\n  DeleteALL = 'DELETEALL_PRODUCT'\n}\n\ntype ProductType = {\n  id: number\n  title: string\n  price: number\n  count: number\n  picture: string\n}\n\ntype ProductPayload = {\n  [Types.Create]: {\n    id: number\n    title: string\n    price: number\n    picture: string\n    count: number\n  }\n  [Types.Delete]: {\n    id: number\n  }\n  [Types.Increase]: {\n    id: number\n  }\n}\n\nexport type ProductActions =\n  ActionMap<ProductPayload>[keyof ActionMap<ProductPayload>]\n\nexport const productReducer = (state, action) => {\n  switch (action.type) {\n    case Types.Create:\n      return [\n        ...state,\n        {\n          id: action.payload.id,\n          title: action.payload.title,\n          price: action.payload.price,\n          picture: action.payload.picture,\n          count: action.payload.count\n        }\n      ]\n    case Types.Delete:\n      return [...state.filter((product) => product.id !== action.payload.id)]\n    case Types.Increase:\n      return [\n        ...state.map((product) =>\n          product.id === action.payload.id\n            ? { ...product, count: product.count + 1 }\n            : product\n        )\n      ]\n    case Types.Decrease:\n      return [\n        ...state.map((product) =>\n          product.id === action.payload.id\n            ? { ...product, count: product.count - 1 }\n            : product\n        )\n      ]\n    case Types.DeleteALL:\n      return []\n    default:\n      return state\n  }\n}\n\n// export const productReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'CREATE_PRODUCT':\n//             return [\n//                 ...state,\n//                 {\n//                     id: action.payload.id,\n//                     title: action.payload.title,\n//                     price: action.payload.price,\n//                     picture: action.payload.picture,\n//                     count: 1\n//                 }\n//             ]\n//         case 'DELETE_PRODUCT':\n//             return [\n//                 ...state.filter(product => product.id !== action.payload.id),\n//             ]\n//         // case 'INCREASE_PRODUCT':\n//         //     return [\n//         //         ...state,\n//         //         {\n//         //             count: action.count + 1\n//         //         }\n//         //     ]\n//         // case 'DECREASE_PRODUCT':\n//         //     if (state.quantity > 0) {\n//         //         return {\n//         //             ...state,\n//         //             count: action.count - 1\n//         //         };\n//         //     }\n//         default:\n//             return state;\n//     }\n// }\n","import React, { useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst NavBar = () => {\n    const history = useHistory()\n\n    useEffect(()=>{\n        {history.push(\"/\")} \n    }, [])\n\n    return (\n        <div className=\"norm\">\n            <div className=\"nav-wrapper white\">\n                <Link to=\"/\" className=\"cus \">Shopping Cart</Link>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Link, withRouter } from 'react-router-dom'\nimport { userContext } from '../App'\n\nimport { Types } from '../reducers';\nconst SingleCard = (props) => {\n\n    const { state, dispatch } = React.useContext(userContext);\n\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src={props.record.picture} />\n            <Card.Body style={{ textAlign: \"center\" }}>\n                <Card.Title style={{ fontSize: \"medium\" }} className=\"btn\"\n                ><Link to={{\n                    pathname: '/product/' + props.record._id,\n                    state: { foo: props.record }\n                }}>{props.record.title} </Link></Card.Title>\n                <Card.Text>\n                    {props.record.description}\n                </Card.Text>\n                <Card.Text style={{ fontSize: \"medium\" }}>\n                    ${props.record.price}\n                </Card.Text>\n                <Card.Text style={{ fontSize: \"medium\" }}>\n                    Available: {props.record.stock}\n                </Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"align-items-center\" >\n                <i className=\"material-icons\"\n                    style={{ float: \"left\", position: \"absolute\", left: \"0px\", color: \"red\", marginLeft: \"5px\" }}\n                    onClick={() => { addToCart(props.record) }}\n                >add_shopping_cart</i> <small className=\"btn\"\n                    onClick={() => { addToCart(props.record) }}\n                    style={{ marginLeft: \"10px\", fontSize: \"large\" }}>  Add to cart</small>\n\n                {\n                    state.products.map(product => (\n                        product.id === props.record._id\n                            ? <span key={product.id}>\n                                <i className=\"material-icons\"\n                                    style={{ position: \"relative\", left: \"0px\", color: \"grey\", marginLeft: \"0px\" }}\n\n                                >check</i>\n\n                                <span className=\"btn btn-secondary\" key={product.id} style={{ marginLeft: \"20px\" }}><Link style={{ color: \"white\" }} to={{\n                                    pathname: '/cart'\n                                }}> View cart</Link></span>\n\n                            </span>\n                            :\n                            <span key={product.id}></span>\n                    ))\n                }\n            </Card.Footer>\n            \n        </Card>\n\n\n\n\n    )\n}\n\nexport default SingleCard","import React, { useEffect, useState, useContext } from 'react'\n//import { Card } from 'react-bootstrap'\nimport axios from 'axios'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { userContext } from '../App'\nimport { Types } from '../reducers'\nimport './Home.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport SingleCard from './SingleCard'\nimport { Stats } from 'fs'\nconst Home = () => {\n  const [items, setItems] = useState<any[]>([])\n  const [subtotal, setSubtotal] = useState(0)\n  const [dropDwonValue, setDropDwonValue] = useState('Default Sorting')\n  const { state, dispatch } = React.useContext(userContext)\n\n  useEffect(() => {\n    axios\n      .get(\n        'https://gist.githubusercontent.com/Yeaseen/9eee54d0c4c673e414af25de915b18e5/raw/b2b746f230cb6d9ce31b36f68a96a361e238de42/file.json'\n      )\n      .then((res) => {\n        //console.log(res.data)\n        setItems(res.data)\n      })\n  }, [])\n\n  useEffect(() => {\n    calculateSubTotal()\n  }, [state])\n\n  const sortDescending = () => {\n    const sorted = items.sort((a, b) => a['price'] - b['price'])\n    //console.log(sorted)\n    setItems(sorted)\n  }\n\n  const sortAscending = () => {\n    const sorted = items.sort((a, b) => b['price'] - a['price'])\n    //console.log(sorted)\n    setItems(sorted)\n  }\n\n  const handleSelect = (e) => {\n    console.log(e)\n    //setValue(e)\n    setDropDwonValue(e)\n\n    if (e === 'Ascending') {\n      sortAscending()\n    } else if (e === 'Descending') {\n      sortDescending()\n    }\n  }\n\n  const calculateSubTotal = () => {\n    let sTotal = 0\n    for (let i = 0; i < state.products.length; i++) {\n      sTotal = sTotal + state.products[i].price * state.products[i].count\n    }\n    //console.log(sTotal)\n    setSubtotal(sTotal)\n  }\n\n  const removeToCart = (recordid) => {\n    //console.log(record)\n    dispatch({\n      type: Types.Delete,\n      payload: {\n        id: recordid\n      }\n    })\n\n    //console.log(state)\n  }\n\n  const increaseCart = (recordID) => {\n    dispatch({\n      type: Types.Increase,\n      payload: {\n        id: recordID\n      }\n    })\n  }\n\n  const decreaseCart = (record) => {\n    if (record.count == 1) {\n      removeToCart(record.id)\n      return\n    }\n\n    dispatch({\n      type: Types.Decrease,\n      payload: {\n        id: record.id\n      }\n    })\n  }\n\n  return (\n    <>\n      {items ? (\n        <div>\n          <div className=\"container\">\n            <div className=\"row site-section\">\n              <div className=\"col-md-9\">\n                <h1>Products</h1>\n\n                <DropdownButton\n                  alignRight\n                  title={dropDwonValue}\n                  id=\"dropdown-menu-align-right\"\n                  onSelect={handleSelect}\n                  style={{\n                    float: 'right',\n                    position: 'absolute',\n                    right: '50px'\n                  }}\n                >\n                  <Dropdown.Item eventKey=\"Ascending\">Ascending</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Descending\">\n                    Descending\n                  </Dropdown.Item>\n                </DropdownButton>\n\n                <div className=\"container-fluid d-flex justify-content-center\">\n                  <div className=\"row\">\n                    {items.map((record) => {\n                      return (\n                        <div className=\"col-md-5\" key={record._id}>\n                          <SingleCard record={record} />\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-3\">\n                <h1>Cart</h1>\n                {state.products.length > 0 ? (\n                  <div>\n                    {state.products.map((record) => (\n                      <div\n                        className=\"Comment-user\"\n                        key={record.id}\n                        style={{ borderBottom: '1px solid blue' }}\n                      >\n                        <div>\n                          <div className=\"Comment-user-avatar\">\n                            <img src={record.picture} />\n                          </div>\n                        </div>\n                        <div className=\"Comment-user-nickname\">\n                          <span\n                            style={{\n                              fontFamily: \"'PT Sans', sans-serif\",\n                              fontWeight: 'bold'\n                            }}\n                          >\n                            {record.title}\n                          </span>\n\n                          <br></br>\n                          <form>\n                            <div className=\"row\">\n                              <div\n                                className=\"value-button\"\n                                id=\"decrease\"\n                                onClick={() => {\n                                  decreaseCart(record)\n                                }}\n                              >\n                                -\n                              </div>\n                              <div className=\"count-value\">{record.count}</div>\n                              <div\n                                className=\"value-button\"\n                                id=\"increase\"\n                                onClick={() => {\n                                  increaseCart(record.id)\n                                }}\n                              >\n                                +\n                              </div>\n                              <div> x ${record.price} </div>\n\n                              <i\n                                className=\"material-icons\"\n                                style={{\n                                  float: 'right',\n                                  position: 'absolute',\n                                  right: '0px',\n                                  color: 'red'\n                                }}\n                                onClick={() => {\n                                  removeToCart(record.id)\n                                }}\n                              >\n                                delete\n                              </i>\n                            </div>\n                          </form>\n\n                          {/* {record.count} x ${record.price} */}\n                          {/* <i className=\"material-icons\"\n                                                            style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                            onClick={() => { removeToCart(record.id) }}\n                                                        >delete</i>\n\n                                                        <br></br> */}\n                        </div>\n                      </div>\n                    ))}\n                    <br></br>\n\n                    <span style={{ fontWeight: 'bolder', fontSize: 'small' }}>\n                      Subtotal: ${subtotal}\n                    </span>\n\n                    <br></br>\n\n                    <div\n                      className=\"btn btn-secondary\"\n                      style={{ marginRight: '10px' }}\n                    >\n                      <Link\n                        style={{ color: 'white' }}\n                        to={{\n                          pathname: '/cart'\n                        }}\n                      >\n                        {' '}\n                        View cart\n                      </Link>\n                    </div>\n\n                    <div\n                      className=\"btn btn-secondary\"\n                      style={{ marginRight: '10px' }}\n                    >\n                      <Link\n                        style={{ color: 'white' }}\n                        to={{\n                          pathname: '/checkout'\n                        }}\n                      >\n                        {' '}\n                        Checkout\n                      </Link>\n                    </div>\n\n                    {/* <div className=\"btn btn-secondary\">Checkout</div> */}\n                  </div>\n                ) : (\n                  <h4>No products in the cart</h4>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading......</h2>\n      )}\n    </>\n  )\n}\n\nexport default withRouter(Home)\n","import React, { useContext, useState, useEffect } from 'react'\n\nimport { userContext } from '../App'\nimport { Link, withRouter } from 'react-router-dom';\nimport { Types } from '../reducers';\nimport './Home.css'\nconst Product = (props) => {\n    const { state, dispatch } = useContext(userContext);\n    const [subtotal, setSubtotal] = useState(0)\n\n    const [count, setCount] = useState(0)\n\n    //console.log(state)\n    const { foo } = props.location.state\n    //console.log(foo)\n\n\n\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n            if (state.products[i].id === foo._id) {\n                setCount(state.products[i].count)\n            }\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n        setCount(0)\n        //console.log(state)\n    }\n\n    const increaseCart = (recordID) => {\n\n        dispatch({\n            type: Types.Increase,\n            payload: {\n                id: recordID\n            }\n        });\n    }\n\n\n    const decreaseCart = (record) => {\n\n        if (record.count == 1) {\n            removeToCart(record.id)\n            return;\n        }\n\n        dispatch({\n            type: Types.Decrease,\n            payload: {\n                id: record.id\n            }\n        });\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row site-section\">\n                <div className=\"col-md-9\">\n\n                    <div className=\"row site-section\" style={{ borderBottom: \"1px solid blue\" }}>\n                        <div className=\"col-md-8\">\n                            <img style={{ height: \"400px\", width: \"400px\" }} src={foo.picture}></img>\n\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <h1>{foo.title}</h1>\n                            <h4>${foo.price}</h4>\n                            <p>{foo.description}</p>\n                            <span style={{ padding: \"7px\", borderWidth: \"1px\", borderStyle: \"solid\", fontSize: \"small\" }}>\n                                {count}\n                            </span>\n\n                            <span className=\"btn btn-secondary\" onClick={() => { addToCart(foo) }} style={{ marginLeft: \"10px\", fontSize: \"large\" }}>  Add to cart</span>\n                        </div>\n\n                    </div>\n\n\n                    <br></br>\n\n\n                    <div className=\"row\">\n                        <h1>Description</h1>\n                        <p>{foo.description}</p>\n                    </div>\n\n                </div>\n\n                <div className=\"col-md-3\">\n                    <h1>Cart</h1>\n                    {\n                        state.products.length > 0 ?\n                            <div>\n                                {state.products.map(record => (\n                                    <div className=\"Comment-user\" key={record.id} style={{ borderBottom: \"1px solid blue\" }}>\n                                        <div>\n                                            <div className=\"Comment-user-avatar\">\n                                                <img src={record.picture} />\n                                            </div>\n                                        </div>\n                                        <div className=\"Comment-user-nickname\" >\n\n                                            <span style={{ fontFamily: \"'PT Sans', sans-serif\", fontWeight: \"bold\" }}>{record.title}</span>\n\n                                            <br></br>\n\n                                            <form>\n                                                <div className=\"row\">\n                                                    <div className=\"value-button\" id=\"decrease\"\n                                                        onClick={() => { decreaseCart(record) }}\n                                                    >-</div>\n                                                    <div className=\"count-value\">\n                                                        {record.count}\n                                                    </div>\n                                                    <div className=\"value-button\" id=\"increase\"\n                                                        onClick={() => { increaseCart(record.id) }}\n                                                    >+</div>\n\n\n                                                    <i className=\"material-icons\"\n                                                        style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                        onClick={() => { removeToCart(record.id) }}\n                                                    >delete</i>\n                                                </div>\n\n                                            </form>\n\n\n                                            {/* {record.count} x ${record.price}\n                                            <i className=\"material-icons\"\n                                                style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                onClick={() => { removeToCart(record.id) }}\n                                            >delete</i> */}\n                                        </div>\n                                    </div>\n                                ))}\n                                <br></br>\n\n                                <span style={{ fontWeight: \"bolder\", fontSize: \"small\" }}>Subtotal: ${subtotal}</span>\n\n                                <br></br>\n\n                                <div className=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}><Link style={{ color: \"white\" }} to={{\n                                    pathname: '/cart'\n                                }}> View cart</Link></div>\n\n                                <div className=\"btn btn-secondary\">Checkout</div>\n                            </div>\n                            : <h4>No products in the cart</h4>\n                    }\n                </div>\n\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Product)","import React, { useContext, useState, useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { userContext } from '../App'\nimport { withRouter } from 'react-router-dom'\nimport { Types } from '../reducers'\n\nimport './Cart.css'\nconst Cart = (props) => {\n  const { state, dispatch } = useContext(userContext)\n  const [subtotal, setSubtotal] = useState(0)\n  //console.log(state)\n\n  useEffect(() => {\n    calculateSubTotal()\n  }, [state])\n\n  const calculateSubTotal = () => {\n    let sTotal = 0\n    for (let i = 0; i < state.products.length; i++) {\n      sTotal = sTotal + state.products[i].price * state.products[i].count\n    }\n    //console.log(sTotal)\n    setSubtotal(sTotal)\n  }\n\n  const removeToCart = (recordid) => {\n    //console.log(record)\n    dispatch({\n      type: Types.Delete,\n      payload: {\n        id: recordid\n      }\n    })\n\n    //console.log(state)\n  }\n\n  const increaseCart = (recordID) => {\n    dispatch({\n      type: Types.Increase,\n      payload: {\n        id: recordID\n      }\n    })\n  }\n\n  const decreaseCart = (record) => {\n    if (record.count == 1) {\n      removeToCart(record.id)\n      return\n    }\n\n    dispatch({\n      type: Types.Decrease,\n      payload: {\n        id: record.id\n      }\n    })\n  }\n\n  const deleteAllItems = () => {\n    dispatch({\n      type: Types.DeleteALL\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Cart View</h1>\n\n      <Table striped bordered hover size=\"lg\">\n        <thead>\n          <tr>\n            <th></th>\n            <th></th>\n            <th style={{ textAlign: 'center', fontSize: 'x-large' }}>\n              Product\n            </th>\n            <th style={{ textAlign: 'center', fontSize: 'x-large' }}>Price</th>\n            <th style={{ textAlign: 'center', fontSize: 'x-large' }}>\n              Quantity\n            </th>\n            <th style={{ textAlign: 'center', fontSize: 'x-large' }}>\n              Subtotal\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.products.map((product) => (\n            <tr key={product.id}>\n              <td>\n                {' '}\n                <i\n                  className=\"material-icons\"\n                  style={{ color: 'red' }}\n                  onClick={() => {\n                    removeToCart(product.id)\n                  }}\n                >\n                  delete\n                </i>\n              </td>\n              <td style={{ textAlign: 'center' }}>\n                <div className=\"Comment-user-avatar\">\n                  <img src={product.picture} />\n                </div>\n              </td>\n              <td\n                className=\"text-primary\"\n                style={{ textAlign: 'center', fontSize: 'x-large' }}\n              >\n                {product.title}\n              </td>\n              <td style={{ textAlign: 'center', fontSize: 'x-large' }}>\n                ${product.price}\n              </td>\n              <td style={{ textAlign: 'center', fontSize: 'x-large' }}>\n                {' '}\n                <div className=\"inc-dec\">\n                  <div className=\"row\">\n                    <div\n                      className=\"vallue-button-dec\"\n                      onClick={() => {\n                        decreaseCart(product)\n                      }}\n                    >\n                      -\n                    </div>\n                    <div className=\"coount-value\">{product.count}</div>\n                    <div\n                      className=\"vallue-button-inc\"\n                      onClick={() => {\n                        increaseCart(product.id)\n                      }}\n                    >\n                      +\n                    </div>\n                  </div>\n                </div>\n              </td>\n              <td style={{ textAlign: 'center', fontSize: 'x-large' }}>\n                ${product.price * product.count}\n              </td>\n            </tr>\n          ))}\n          <tr key=\"0\">\n            <td colSpan={6} style={{ textAlign: 'right', fontSize: 'x-large' }}>\n              {' '}\n              <Button\n                variant=\"secondary\"\n                size=\"lg\"\n                onClick={() => {\n                  deleteAllItems()\n                }}\n              >\n                Empty Cart\n              </Button>{' '}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <br></br>\n      <br></br>\n\n      <div className=\"row\">\n        <div style={{ height: '300px' }} className=\"col-md-10 offset-md-6\">\n          <div\n            className=\"row border align-items-center\"\n            key=\"1\"\n            style={{\n              height: '100px',\n              fontSize: 'x-large',\n              paddingLeft: '10px',\n              paddingRight: '30px'\n            }}\n          >\n            <span\n              style={{\n                paddingRight: '15px',\n                fontWeight: 'bolder',\n                color: 'gray'\n              }}\n            >\n              Subtotal\n            </span>\n            <span style={{ fontWeight: 'lighter' }}>${subtotal}</span>\n          </div>\n          <div\n            className=\"row border align-items-center\"\n            key=\"2\"\n            style={{\n              height: '150px',\n              fontSize: 'x-large',\n              paddingLeft: '10px',\n              paddingRight: '30px'\n            }}\n          >\n            <span\n              style={{\n                paddingRight: '15px',\n                fontWeight: 'bolder',\n                color: 'gray'\n              }}\n            >\n              Shipping\n            </span>\n            <span style={{ fontWeight: 'lighter' }}>\n              Free Shipping <br></br>Shipping options will be updated during\n              checkout{' '}\n            </span>\n          </div>\n          <div\n            className=\"row border align-items-center\"\n            key=\"3\"\n            style={{\n              height: '100px',\n              fontSize: 'x-large',\n              paddingLeft: '10px',\n              paddingRight: '30px'\n            }}\n          >\n            <span\n              style={{\n                paddingRight: '60px',\n                fontWeight: 'bolder',\n                color: 'gray'\n              }}\n            >\n              Total\n            </span>\n            <span style={{ fontWeight: 'lighter' }}>${subtotal}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Cart)\n","import React, { useContext, useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nconst Checkout = (props) => {\n  return <div className=\"container\">Hello From Checkout Page</div>\n}\nexport default withRouter(Checkout)\n","import React, { useEffect, createContext, useReducer, useContext } from 'react'\nimport NavBar from './components/Navbar'\nimport './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Product from './components/Product'\nimport Cart from './components/Cart'\nimport Checkout from './components/Checkout'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { productReducer } from './reducers'\n\ntype ProductType = {\n  id: number\n  title: string\n  price: number\n  count: number\n  picture: string\n}\n\ntype InitialStateType = {\n  products: ProductType[]\n}\n\nconst initialState = {\n  products: []\n}\nconst mainReducer = ({ products }, action) => ({\n  products: productReducer(products, action)\n})\n\nexport const userContext = createContext<{\n  state: InitialStateType\n  dispatch: React.Dispatch<any>\n}>({\n  state: initialState,\n  dispatch: () => null\n})\n\nconst Routing = (props) => {\n  const { state, dispatch } = useContext(userContext)\n\n  useEffect(() => {}, [])\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route exact path=\"/product/:productid\">\n        <Product />\n      </Route>\n\n      <Route exact path=\"/cart\">\n        <Cart />\n      </Route>\n\n      <Route exact path=\"/checkout\">\n        <Checkout />\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(mainReducer, initialState)\n  return (\n    <userContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}